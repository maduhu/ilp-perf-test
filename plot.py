#!/bin/python

import json
import matplotlib.pyplot as plt
import numpy as np

# result from the performance test
jsonString = '{"measureInterval":5,"completedPaymentsPerInterval":[49,49.6,49.2,49.6,49.4,49.6,49.4,49.8,48.2,50,49.4,46.8,45.4,50.4,51.2,50,49,50,48.4,50.6,48.8,50,49.4,50,47.6,49.8,50.4,49.6,49.4,49,50.2,48.8,50.6,49.8,49.6,49.4,48.6,49.6,49.4,50.2,49.2,49.8,50,49.6,49.6,50.2,49.4,50,49,49.6,49.4,49.8,49.2,50.4,49.6,49.6,50,49.4,50,49.2,48.6,46.6,51.8,50.8,49.6,49.4,49.8,49.4,49.8,50,49.2,49.8,49.2,49.8,49.2,50,49.2,49.8,49.6,50.2,49.2,49.8,49.8,49.4,48.2,50.4,49.4,50,49.2,49.8,49.8,49.4,50.4,49.4,49.2,49.8,49.4,50,49.2,49.8,50,49.8,49.6,49.6,49.2,50,49.8,49,49.2,49.8,50,49.2,49.8,49.2,50.8,49,50,49.4,49.8,49.6,49,49.6,50,49.2,49.8,49.2,50.8,50,49.6,49.4,50,49.6,49,50,50,49.4,49.6,49.4,49,50.6,50,49.4,49.6,49.4,48.6,50.2,49.8,49.2,50,49.8,49.6,50,49,50.4,49.4,50.2,48.4,49,50.2,49.8,49.6,49.4,49.6,50,49.4,50,49.4,49.6,48.4,50.4,49.8,48.2,50.2,50.2,49.2,49.6,50,50,49,49.6,48.8,49.6,49.6,50.4,49,50.2,49.8,49.2,49.4,49.6,50.6,49.2,49.4,49.8,49.4,49.4,50.2,49.4,49.8,49,50,49,50.2,49,50,49,49.2,50.6,49.6,49.6,50,49,50,49,50,50,48.2,50,49.6,49.2,50,49.4,50.2,49.6,49.2,49.8,49.2,50,49.4,49.6,50,50,49,49.6,49.4,50,49.4,49.6,50,49.2,48.4,50.4,49.4,49.8,49.2,49.4,50.4,49.2,49.8,50,49.2,49.8,48.2,50.6,49.4,49.8,50,49.2,49.8,49.8,49.8,49.4,49,50,48.8,48.6,50.6,49.2,49.8,50,48.6,48.4,48.8,43.2,49.8,57.6,49.2,49.2,50.2,49.6,49,50,49.6,49.6,50.4,49.4,49.4,49.8,47.2,50.6,49.4,50,49.6,49.4,50,49.2,50.4,48.6,50.4,49.4,49,49.2,49.8,49.6,50,48.8,49.8,49.8,49.6,49.8,49.6,48.6,49.8,49.8,50,49.8,49.2,49,49.8,49.4,49.8,50,49,48.2,49.2,49,50.6,49.4,50,49.6,49.4,50,50,50,49,49.4,49.6,49.6,49.4,50,49.4,49.6,49.2,50.2,49.6,50,49.6,49.2,49,49.6,49.4,50,49.6,49.8,49.6,49,50.6,49.6,49.8,49,48.8,50,49.8,49.4,50,49.2,50,49.8,49,50,49.6,50.2,48.2,50,49,50,50,50,49.8,49.6,49.6,48.8,48.6,50.8,48.6,50.2,49.8,49,50.2,49.8,49.2,49.8,50,50,49,49.6,48.6,50,49.2,50.2,49.2,50.8,48.4,49.8,50.4,49.6,49.8,50,49,49.4,50,49.6,49.8,49.8,48.8,48,51,51,49.2,49,45.6,47,55,39.2,25.8,49.6,60.6,69.2,53.2,49.6,50.4,47,50.4,49.6,50,49.4,50.2,49,48.4,50.4,49.6,48.4,38.8,43.6,53.2,53.2,51.8,50,32.2,57.6,55.8,49,49.6,50,48.6,50.2,48.4,49.8,49.2,49.8,49,49.8,49.4,49.8,49,50,49.2,49.4,48.4,49.8,49.2,49.2,49.8,48.8,50.4,49.2,49.6,49.4,50,48.8,48.2,49.6,50,48.8,49.4,49.8,49.2,49.8,48.6,50,49.6,48.8,49,50,49.4,49.6,48.6,50.4,49.2,48.8,50,50,49,50,48.8,49.6,49.8,49.6,49,49.2,49.8,49.8,49.4,49.8,49,50,48,50,49,50,49.6,49.4,50,49.4,49.6,49,50,49.2,49.2,49.2,49.8,49.4,49.6,49.8,49.2,49,50,49,49.8,49.2,49.4,49,50,49,50,49.4,49.6,49,50,49.6,49.4,49.6,48.2,49.6,49.6,49.6,49.4,49.4,49.6,49.2,49.8,49,50,48,49.8,49.2,50,49,49,50,49,50,49,50,49,49.6,46.2,50.8,50,49.2,49.6,49.2,50.2,49.2,49.6,49.2,49.8,49,50,48.4,49.2,49.8,49.2,49.8,48.4,50,49.6,49.4,49.6,49.8,48.8,49,49.8,49.4,49.8,49.8,49,50,50,50,49.2,49.8,49.6,48.8,49.8,49.2,50,50,49.8,49.6,49.8,49.6,50,49.2,48.8,48.4,48,48,54,49.8,48,51,50,49,50.2,49,49.6,49.2,50,49.6,48.2,48.2,46,54.8,47.4,51.4,50.2,49.6,47.8,49,45.4,47,55.2,51.4,47.6,52.4,49,49.6,49.6,49.2,48.2,47.6,50.8,49.8,48,50.4,50.6,50,48.2,50.8,49.2,49.8,49.6,48.6,49.4,49.4,50,49,50,49.4,49.6,49.2,50,43.8,50.4,50,50.2,48.8,51,49.8,49,47.8,52,50.2,49.2,49.8,49,49.2,49,43.8,46.6,54,53.8,49.6,50.2,49.6,49.2,49.4,48.8,48.4,49.2,49.6,49.8,50.2,48,37.8,54.4,45.4,55.4,46.4,54.4,50.6,49.6,50.6,49.4,49.6,49.4,49.2,50.8,49.4,49.4,50.2,48.6,49.4,50,49.6,49.4,50,50,49.2,49.8,48.6,50.8,48.6,50.6,49,49.4,49.2,46.4,51.6,50.8,50,50,49.6,49.4,50,49.2,49,49.2,50,49.4,49.2,50,49.2,49.8,49,49.6,49.4,50,48,49.8,49.6,49.4,50,50,49.4,47.8,51,48.8,31.8,43.2,30.6,47,53.8,64.8,53.8,50.8,49.6,49.4,49.2,49.2,49.6,49.8,47.4,49.6,50.4,49,49.2,49.8,49.2,49.8,50,49,49.6,49.4,49,49.8,47.8,51.2,49,50,49.4,48.8,49.8,49.2,50.8,49,49,49,49.2,50.8,48.8,49.6,49.6,50,49.2,50,49.8,49.2,48.8,49,50.2,48,51,49.8,49,50,49.6,49]}'
data = json.loads(jsonString)

result = data['completedPaymentsPerInterval']
measureInterval = data['measureInterval'] # in seconds

numDataPoints = 60 * 60 / measureInterval
if (len(result) > numDataPoints):
	# we only want one hour worth of measurments
	result = result[:numDataPoints]

# calculate average per minute
dataPointsPerMinute = 60 / measureInterval
tmp = np.array(result).reshape(-1, dataPointsPerMinute)
avg = np.mean(tmp, axis=1)

plt.plot(avg)
plt.xlabel('Minutes')
plt.ylabel('Successful Payments')
axes = plt.gca()
axes.set_ylim([0,60])
plt.show()
